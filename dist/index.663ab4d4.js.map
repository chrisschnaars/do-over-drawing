{"mappings":"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","sources":["src/sketch.js"],"sourcesContent":["let canvas;\nlet crayon;\nconst timeLimit = 14;\nlet lastTime = 0;\nlet looping = true;\n\nconst BGCOLORS = [\n    { name: 'black', hex: '#000' },\n    { name: 'white', hex: '#FFF' },\n    { name: 'pink', hex: '#FFC0CB' },\n];\n\nconst FGCOLORS = [\n    { name: 'red', hex: '#f44336' },\n    { name: 'pink', hex: '#E91E63' },\n    { name: 'purple', hex: '#9C27B0' },\n    { name: 'deeppurple', hex: '#673AB7' },\n    { name: 'indigo', hex: '#3F51B5' },\n    { name: 'blue', hex: '#2196F3' },\n    { name: 'lightblue', hex: '#03A9F4' },\n    { name: 'cyan', hex: '#00BCD4' },\n    { name: 'teal', hex: '#009688' },\n    { name: 'green', hex: '#4CAF50' },\n    { name: 'lightgreen', hex: '#8BC34A' },\n    { name: 'lime', hex: '#CDDC39' },\n    { name: 'yellow', hex: '#FFEB3B' },\n    { name: 'amber', hex: '#FFC107' },\n    { name: 'orange', hex: '#FF9800' },\n    { name: 'deeporange', hex: '#FF5722' },\n    { name: 'brown', hex: '#795548' },\n    { name: 'grey', hex: '#9E9E9E' },\n];\n\nconst CRAYONSIZES = [\n    { name: 'SM', size: 30 },\n    { name: 'MD', size: 40 },\n    { name: 'LG', size: 50 },\n];\n\n// Set the canvas size based on size window and header size\nconst setCanvasSize = () => {\n    const topBar = document.querySelector('header');\n    const canvasHeight = window.innerHeight - document.querySelector('header').offsetHeight - 48;\n\n    const canvasSize = {\n        width: window.innerWidth-48,\n        height: canvasHeight,\n    };\n\n    return canvasSize;\n};\n\n// Draw the color palette & size option bars\nconst renderColorPalette = () => {\n    const divSize = '32px';\n\n    for (let i = 0; i < FGCOLORS.length; i++) {\n        let box = document.createElement('div');\n        box.style.backgroundColor = FGCOLORS[i].hex;\n        box.style.width = box.style.height = divSize;\n        box.classList.add('fg', 'tile');\n        document.querySelector('.fg-colors').appendChild(box);\n    }\n\n    for (let i = 0; i < BGCOLORS.length; i++) {\n        let box = document.createElement('div');\n        box.style.backgroundColor = BGCOLORS[i].hex;\n        box.style.width = box.style.height = divSize;\n        box.classList.add('bg', 'tile');\n        document.querySelector('.bg-colors').appendChild(box);\n    }\n\n    for (let i = 0; i < CRAYONSIZES.length; i++) {\n        let box = document.createElement('div');\n        box.classList.add('size', 'tile');\n        box.style.width = box.style.height = divSize;\n        box.innerHTML = CRAYONSIZES[i].name;\n        document.querySelector('.crayon-sizes').appendChild(box);\n    }\n};\n\n// Update the active colors\nconst updateColorPalette = (bg, fg, size) => {\n    // Reset all actve divs\n    let current = document.querySelectorAll('.active');\n    for (let i = 0; i < current.length; i++) {\n        current[i].classList.remove('active');\n    }\n\n    // Set BG color\n    document.querySelector('#canvas-container').style.backgroundColor = BGCOLORS[bg].hex;\n    let bgOptions = document.querySelectorAll('.bg');\n    bgOptions[bg].classList.add('active');\n\n    // Set FG color\n    let fgOptions = document.querySelectorAll('.fg');\n    fgOptions[fg].classList.add('active');\n\n    // Set Size\n    let sizeOptions = document.querySelectorAll('.size');\n    sizeOptions[size].classList.add('active');\n};\n\n// Set canvas and crayzon colors and size\nfunction resetCanvas() {\n    clear();\n\n    // Change background and foreground color\n    let bgColorId = floor(random(0, BGCOLORS.length));\n    let fgColorId = floor(random(0, FGCOLORS.length));\n    let sizeId = floor(random(0, CRAYONSIZES.length));\n    updateColorPalette(bgColorId, fgColorId, sizeId);\n    crayon.setColorAndSize(fgColorId, sizeId);\n}\n\nfunction setup() {\n    // Get canvas dimensions\n    const { width, height } = setCanvasSize();\n    noStroke();\n\n    // Create toolbar divs for each bg & fg color\n    renderColorPalette();\n\n    // Create canvas\n    canvas = createCanvas(width, height);\n    canvas.parent('canvas-container');\n\n    crayon = new Crayon(mouseX, mouseY);\n    resetCanvas();\n}\n\n// Main p5 draw loop\nfunction draw() {\n    crayon.draw();\n    crayon.update();\n\n    // Set timer\n    let timeSpent = millis();\n\n    // Time check\n    if (timeSpent < lastTime + timeLimit * 1000) {\n        let e = timeSpent / 1000;\n        let arcEnd = radians((360 / timeLimit) * e - 90); // calculate the end of the arc based on time\n        fill(crayon.color);\n        arc(width - 40, height - 40, 40, 40, PI + HALF_PI, arcEnd); // draw the timer arc\n    } else {\n        lastTime = millis();\n        resetCanvas();\n    }\n}\n\nfunction Crayon(x, y) {\n    this.x = x;\n    this.y = y;\n    this.color;\n    this.size;\n\n    this.draw = function () {\n        fill(this.color);\n\n        if (!mouseIsPressed) {\n            ellipseMode(CENTER);\n            ellipse(this.x, this.y, this.size, this.size); // ellipse at the mouse position with random diameter\n        }\n    };\n\n    this.update = function () {\n        this.x = mouseX;\n        this.y = mouseY;\n    };\n\n    this.setColorAndSize = function (color, size) {\n        this.color = FGCOLORS[color].hex;\n        this.size = CRAYONSIZES[size].size;\n    };\n}\n\nfunction windowResized() {\n    const { width, height } = setCanvasSize();\n    resizeCanvas(width, height);\n}\n\n// Pause the sketch with space bar\nfunction keyPressed() {\n    if (key == ' ') {\n        togglePlaying();\n    }\n}\n\n// Handle looping toggle\nfunction togglePlaying() {\n    if (looping == true) {\n        noLoop();\n        looping = false;\n    } else {\n        loop();\n        looping = true;\n    }\n}\n"],"names":[],"version":3,"file":"index.663ab4d4.js.map","sourceRoot":"/__parcel_source_root/"}